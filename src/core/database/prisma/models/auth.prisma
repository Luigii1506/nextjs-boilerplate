// üîê AUTHENTICATION MODELS
// ======================
// Modelos core para autenticaci√≥n con Better Auth
// Siempre presentes - requeridos para el funcionamiento b√°sico

model User {
  id               String   @id @default(cuid())
  name             String
  email            String   @unique
  emailVerified    Boolean  @default(false)
  image            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  twoFactorEnabled Boolean  @default(false)

  // üõ°Ô∏è Auth & Security
  role       String?
  banned     Boolean?
  banReason  String?
  banExpires DateTime?
  
  // üîó Relations
  sessions   Session[]
  accounts   Account[]

  // üß© FUTURE: Modular relations (uncomment when modules are active)
  uploads      Upload[]      // MODULE: file-upload
  // orders       Order[]       // MODULE: ecommerce  
  // payments     Payment[]     // MODULE: stripe-payments

  @@map("user")
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime
  token     String   @unique
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // üïµÔ∏è Impersonation support
  impersonatedBy String?

  @@map("session")
}

model Account {
  id                    String    @id @default(cuid())
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("account")
}

model Verification {
  id         String    @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt

  @@map("verification")
} 